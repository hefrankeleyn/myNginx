# 使用#添加注释，使用$符号可以使用变量
# 配置由指令和指令块组成，指令块以{}将多条指令组织在一起。
server {# 每个server 对应一个网站
    listen       80;#监听的端口
    server_name  localhost 10.211.55.4;# 域名，可以写多个

    #charset koi8-r;# 指定字符集
    #access_log  /var/log/nginx/host.access.log  main; #指定访问日志的位置和格式

    location / { # 匹配所有路径
        root   /usr/share/nginx/html;# 静态文件跟目录
        index  index.html index.htm;# 索引文件
    }

    #error_page  404              /404.html;#错误页面，如果返回的状态码是404的话，会重定向到/404.html

    # redirect server error pages to the static page /50x.html
    # 把服务端错误状态码重定向到50x.html上
    error_page   500 502 503 504  /50x.html;
    location = /50x.html { 当路径是/50x.html 的话，跟目录是 /usr/share/nginx/html
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    # 有些指令可以支持正则表达式
    # 如果访问的文件名是.php结尾的话，会把此请求转发给http://127.0.0.1
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    # 如果访问的文件名是.php结尾的话，会把请求转发给 127.0.0.1:9000
    # 这种方式不需要经过apache（现在最常被使用的方式）
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    # 如果路径是/.ht 的话，禁止所有人访问
    #location ~ /\.ht {
    #    deny  all;
    #}
}

